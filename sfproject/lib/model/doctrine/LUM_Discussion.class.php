<?php

/**
 * LUM_Discussion
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    musiques-incongrues
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class LUM_Discussion extends BaseLUM_Discussion
{
    /**
     * Returns discussion's URI.
     *
     * @return string
     */
    public function getUri($prefix = '')
    {
        return sprintf('%s%d/%s', $prefix, $this->discussionid, $this->getSlug());
    }

    /**
     * Generates discussion slug.
     *
     * @return slug
     *
     * @see http://www.intrepidstudios.com/blog/2009/2/10/function-to-generate-a-url-friendly-string.aspx
     */
    public function getSlug()
    {
        // Build slug
        $result = strtolower($this->name);

        $result = preg_replace("/[^a-z0-9\s-]/", "", $result);
        $result = trim(preg_replace("/[\s-]+/", " ", $result));
        $result = preg_replace("/\s/", "-", $result);

        return $result;
    }

    /**
     * Returns URL to first image in discussion.
     *
     * @return string or null
     */
    public function getFirstImageUrl()
    {
        // Grab topic first image, if any
        $query = sprintf('http://data.musiques-incongrues.net/collections/links/segments/images/get?discussion_id=%d&format=json', $this->discussionid);
        require_once 'HTTP/Request2.php';
        $request = new HTTP_Request2($query, HTTP_Request2::METHOD_GET);
        try
        {
            $response = $request->send();
            if (200 == $response->getStatus())
            {
                $images = json_decode($response->getBody(), true);
            }
        }
        catch (HTTP_Request2_Exception $e)
        {
            echo 'Error: ' . $e->getMessage();
        }

        $image = null;
        if ($images['num_found'] > 0)
        {
            $image = $images[0]['url'];
        }

        return $image;
    }

    public function getCreationDate()
    {
        $date_parts = explode(' ', $this->datecreated);
        return $date_parts[0];
    }
}
